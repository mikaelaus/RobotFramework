<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20160810 15:54:25.960" generator="Robot 3.0 (Python 2.7.11 on darwin)">
<suite id="s1" name="Asset Manager Recommendations &amp; Risk Profile Slider">
<suite source="/Users/Sweta/Documents/RobotFramework/Tests/Asset_Manager_Recommendations.robot" id="s1-s1" name="Asset Manager Recommendations">
<test id="s1-s1-t1" name="User should not see recommendations when clicking submit before entering values in fields">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${baseurl}</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20160810 15:54:26.082" level="INFO">Opening browser 'chrome' to base url 'http://localhost:8080/asset-manager-react1'</msg>
<status status="PASS" endtime="20160810 15:54:28.957" starttime="20160810 15:54:26.082"></status>
</kw>
<kw name="Maximize Browser Window" library="Selenium2Library">
<doc>Maximizes current browser window.</doc>
<status status="PASS" endtime="20160810 15:54:29.263" starttime="20160810 15:54:28.958"></status>
</kw>
<kw name="Wait Until Page Contains" library="Selenium2Library">
<doc>Waits until `text` appears on current page.</doc>
<arguments>
<arg>React Tutorial</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:29.286" starttime="20160810 15:54:29.264"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:29.360" starttime="20160810 15:54:29.286"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:29.394" level="INFO">${sliderval} = 6</msg>
<status status="PASS" endtime="20160810 15:54:29.394" starttime="20160810 15:54:29.360"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${sliderval}</arg>
<arg>6</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:29.395" starttime="20160810 15:54:29.394"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>${submitButton}</arg>
</arguments>
<msg timestamp="20160810 15:54:29.395" level="INFO">Clicking button 'xpath=//form/input[6]'.</msg>
<status status="PASS" endtime="20160810 15:54:29.472" starttime="20160810 15:54:29.395"></status>
</kw>
<kw name="Page Should Not Contain List" library="Selenium2Library">
<doc>Verifies select list identified by `locator` is not found from current page.</doc>
<arguments>
<arg>${recommendations}</arg>
</arguments>
<msg timestamp="20160810 15:54:29.491" level="INFO">Current page does not contain list 'xpath=//ul/li'.</msg>
<status status="PASS" endtime="20160810 15:54:29.491" starttime="20160810 15:54:29.472"></status>
</kw>
<doc>This test verifies that user can't see recommendations if values aren't entered</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="PASS" endtime="20160810 15:54:29.491" critical="yes" starttime="20160810 15:54:26.080"></status>
</test>
<test id="s1-s1-t2" name="User should not see recommendations when clicking submit after entering 1 value">
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>//form/input[1]</arg>
<arg>100</arg>
</arguments>
<msg timestamp="20160810 15:54:29.494" level="INFO">Typing text '100' into text field '//form/input[1]'</msg>
<status status="PASS" endtime="20160810 15:54:29.604" starttime="20160810 15:54:29.493"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>${submitButton}</arg>
</arguments>
<msg timestamp="20160810 15:54:29.605" level="INFO">Clicking button 'xpath=//form/input[6]'.</msg>
<status status="PASS" endtime="20160810 15:54:29.685" starttime="20160810 15:54:29.604"></status>
</kw>
<kw name="Xpath Should Match X Times" library="Selenium2Library">
<doc>Verifies that the page contains the given number of elements located by the given `xpath`.</doc>
<arguments>
<arg>//ul/li</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160810 15:54:29.713" level="INFO">&lt;!DOCTYPE html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;
    &lt;!-- Not present in the tutorial. Just for basic styling. --&gt;
    &lt;link rel="stylesheet" href="main.css" /&gt;
    &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" /&gt;

   
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js"&gt;&lt;/script&gt;
  &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js"&gt;&lt;/script&gt;
  
&lt;script&gt;



      var AssetManager = React.createClass({displayName: "AssetManager",
        getInitialState: function() {
          return {
            risk: 1, 
            expected: {
              bonds: 10, 
              stocks: 0, 
              etfs: 0, 
              realEstate: 0, 
              cash: 90
            }, 
            actualBonds: 0, 
            actualStocks: 0, 
            actualEtfs: 0, 
            actualRealEstate: 0, 
            actualCash: 0, 
            insights: []
          }
        }, 
        handleChange: function(e) {
          this.setState({
            risk: e.target.value, 
            expected: {
              bonds: this.props.possibilities[e.target.value][0],
              stocks: this.props.possibilities[e.target.value][1],
              etfs: this.props.possibilities[e.target.value][2],
              realEstate: this.props.possibilities[e.target.value][3],
              cash: this.props.possibilities[e.target.value][4]
            }
          })
        }, 
        handleUpdate: function(name, e) {
          console.log('here is name', name, 'here is e', e.target.value)
          var newState = {};
          newState[name] = Number(e.target.value);
          this.setState(newState)
          console.log(this.state)
        },

        handleSubmit: function(e) {
          e.preventDefault()

          var actualPercents = {
          }
          var totalAmount = 0;
          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              totalAmount += this.state[key];
            }
          }

          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              actualPercents[key] = Math.round(this.state[key]/totalAmount * 100);
              console.log('hello');
            }
          }
          var insights = [];
          
          if (actualPercents.actualBonds &amp;gt; this.state.expected.bonds + 5) {
            var diff = actualPercents.actualBonds - this.state.expected.bonds;
            insights.push("Decrease your bonds by " + diff + "%.");
          } else if (actualPercents.actualBonds &amp;lt; this.state.expected.bonds - 5 ) {
            var diff = this.state.expected.bonds - actualPercents.actualBonds;
            insights.push("Increase your bonds by " + diff + "%.");
          }

          if (actualPercents.actualStocks &amp;gt; this.state.expected.stocks + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.stocks;
            insights.push("Decrease your stocks by " + diff + "%.");
          } else if (actualPercents.actualStocks &amp;lt; this.state.expected.stocks - 5 ) {
            var diff = this.state.expected.stocks - actualPercents.actualStocks;
            insights.push("Increase your stocks by " + diff + "%.");
          }

          if (actualPercents.actualEtfs &amp;gt; this.state.expected.etfs + 5) {
            var diff = actualPercents.actualEtfs - this.state.expected.etfs;
            insights.push("Decrease your etfs by " + diff + "%.");
          } else if (actualPercents.actualEtfs &amp;lt; this.state.expected.etfs - 5 ) {
            var diff = this.state.expected.etfs - actualPercents.actualEtfs;
            insights.push("Increase your etfs by " + diff + "%.");
          }

          if (actualPercents.actualRealEstate &amp;gt; this.state.expected.realEstate + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.realEstate;
            insights.push("Decrease your real estate by " + diff + "%.");
          } else if (actualPercents.actualRealEstate &amp;lt; this.state.expected.realEstate - 5 ) {
            var diff = this.state.expected.realEstate - actualPercents.actualRealEstate;
            insights.push("Increase your real estate by " + diff + "%.");
          }

          if (actualPercents.actualCash &amp;gt; this.state.expected.cash + 5) {
            var diff = actualPercents.actualCash - this.state.expected.cash;
            insights.push("Decrease your cash by " + diff + "%.");
          } else if (actualPercents.actualCash &amp;lt; this.state.expected.cash - 5 ) {
            var diff = this.state.expected.cash - actualPercents.actualCash;
            insights.push("Increase your cash by " + diff + "%.");
          }

          console.log('here are the insights', insights);
          this.setState({
            insights: insights
          })

          console.log('what is the state obj', this.state);
        },
        render: function() {
          return (
            React.createElement("div", {className: "assetManager"}, 
              React.createElement("h1", {className: "jumbotron"}, " Asset Manager "), 

              React.createElement("p", null, " What does your risk profile look like? "), 
              React.createElement("button", {className: "btn btn-primary", type: "button"}, 
                "Risk ", React.createElement("span", {className: "badge"}, this.state.risk)
              ), 
              React.createElement("input", {type: "range", id: "risk", name: "risk", min: "0", max: "10", onChange: this.handleChange}), 
              React.createElement("output", {for: "risk", onforminput: "value = risk.valueAsNumber;"}), 
              React.createElement("div", null, 
              React.createElement("span", {className: "testing"}, " Bonds: ", this.props.possibilities[this.state.risk][0], "% "), 
              React.createElement("span", null, " Stocks: ", this.props.possibilities[this.state.risk][1], "% "), 
              React.createElement("span", null, " ETFs: ", this.props.possibilities[this.state.risk][2], "% "), 
              React.createElement("span", null, " Real Estate: ", this.props.possibilities[this.state.risk][3], "% "), 
              React.createElement("span", null, " Cash: ", this.props.possibilities[this.state.risk][4], "% ")
              ), 
              React.createElement("h6", null, " ", React.createElement("i", null, " What does your current portfolio look like? Please provide $ value for all categories. "), " "), 
              React.createElement("form", {onSubmit: this.handleSubmit}, 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualBonds'), placeholder: "Bonds"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualStocks'), placeholder: "Stocks"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualEtfs'), placeholder: "ETFs"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualRealEstate'), placeholder: "Real Estate"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualCash'), placeholder: "Cash"}), 
                React.createElement("input", {type: "submit"})
                ), 
              React.createElement(ListOfInsights, React.__spread({},  this.props, {data: this.state.insights}))
            )
            );
        }
      });

      var Slider = React.createClass({displayName: "Slider",
        render: function() {
          console.log("what is the state now", this.state)
          return (
            React.createElement("div", {className: "slider"}, 
              "Here is the slider", 
              React.createElement("input", {type: "text", placeholder: "risk number"}), 
              React.createElement("input", {type: "submit"}, " Hello ")
            )
          );
        }
      });

      var Chart = React.createClass({displayName: "Chart",
        render: function() {
          return (
            React.createElement("div", {className: "chart"}, 
              "Here is the chart!" + ' ' +
              "Here is the set of associated data"
            )
          );
        }
      });

      var Portfolio = React.createClass({displayName: "Portfolio",
        render: function() {
          return (
            React.createElement("div", {className: "portfolio"}, 
              "Please fill in your portfolio inputs", 
              React.createElement("input", {type: "text", placeholder: "Bonds"}), 
              React.createElement("input", {type: "text", placeholder: "Stocks"}), 
              React.createElement("input", {type: "text", placeholder: "ETFs"}), 
              React.createElement("input", {type: "text", placeholder: "Real Estate"}), 
              React.createElement("input", {type: "text", placeholder: "Cash"})
            )
          );
        }
      });

      var ListOfInsights = React.createClass({displayName: "ListOfInsights",
        render: function() {
          console.log('here are the insights', this.props.data);
          var list = this.props.data.map(function(insight) {
            return (
              React.createElement("li", {className: "list-group-item"}, insight)
            )
          });

          return (
            React.createElement("div", {className: "panel panel-default"}, 
              React.createElement("div", {className: "panel-heading"}, "Recommendations"), 
              React.createElement("ul", {className: "list-group"}, 
                list
              )
            )
          );
        }
      });
      
      var options = {
        possibilities: {
          1: [10, 0, 0, 0, 90],
        2: [10, 10, 0, 0, 80], 
        3: [10, 10, 10, 0, 70], 
        4: [20, 10, 10, 0, 60], 
        5: [15, 15, 10, 10, 50], 
        6: [15, 15, 15, 15, 60], 
        7: [10, 20, 20, 20, 30], 
        8: [5, 30, 10, 30, 20], 
        9: [0, 40, 5, 35, 20], 
        10: [5, 40, 5, 40, 10]
        },
        insights: []
      }
      var element = React.createElement(AssetManager, options);

      ReactDOM.render(element, document.body);
    
//# sourceMappingURL=data:application/json;base64,&lt;/script&gt;&lt;/head&gt;
  
  &lt;body&gt;&lt;div class="assetManager" data-reactid=".0"&gt;&lt;h1 class="jumbotron" data-reactid=".0.0"&gt; Asset Manager &lt;/h1&gt;&lt;p data-reactid=".0.1"&gt; What does your risk profile look like? &lt;/p&gt;&lt;button class="btn btn-primary" type="button" data-reactid=".0.2"&gt;&lt;span data-reactid=".0.2.0"&gt;Risk &lt;/span&gt;&lt;span class="badge" data-reactid=".0.2.1"&gt;6&lt;/span&gt;&lt;/button&gt;&lt;input type="range" id="risk" name="risk" min="0" max="10" data-reactid=".0.3" /&gt;&lt;output data-reactid=".0.4"&gt;&lt;/output&gt;&lt;div data-reactid=".0.5"&gt;&lt;span class="testing" data-reactid=".0.5.0"&gt;&lt;span data-reactid=".0.5.0.0"&gt; Bonds: &lt;/span&gt;&lt;span data-reactid=".0.5.0.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.0.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.1"&gt;&lt;span data-reactid=".0.5.1.0"&gt; Stocks: &lt;/span&gt;&lt;span data-reactid=".0.5.1.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.1.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.2"&gt;&lt;span data-reactid=".0.5.2.0"&gt; ETFs: &lt;/span&gt;&lt;span data-reactid=".0.5.2.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.2.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.3"&gt;&lt;span data-reactid=".0.5.3.0"&gt; Real Estate: &lt;/span&gt;&lt;span data-reactid=".0.5.3.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.3.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.4"&gt;&lt;span data-reactid=".0.5.4.0"&gt; Cash: &lt;/span&gt;&lt;span data-reactid=".0.5.4.1"&gt;60&lt;/span&gt;&lt;span data-reactid=".0.5.4.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;h6 data-reactid=".0.6"&gt;&lt;span data-reactid=".0.6.0"&gt; &lt;/span&gt;&lt;i data-reactid=".0.6.1"&gt; What does your current portfolio look like? Please provide $ value for all categories. &lt;/i&gt;&lt;span data-reactid=".0.6.2"&gt; &lt;/span&gt;&lt;/h6&gt;&lt;form data-reactid=".0.7"&gt;&lt;input type="text" placeholder="Bonds" data-reactid=".0.7.0" /&gt;&lt;input type="text" placeholder="Stocks" data-reactid=".0.7.1" /&gt;&lt;input type="text" placeholder="ETFs" data-reactid=".0.7.2" /&gt;&lt;input type="text" placeholder="Real Estate" data-reactid=".0.7.3" /&gt;&lt;input type="text" placeholder="Cash" data-reactid=".0.7.4" /&gt;&lt;input type="submit" data-reactid=".0.7.5" /&gt;&lt;/form&gt;&lt;div class="panel panel-default" data-reactid=".0.8"&gt;&lt;div class="panel-heading" data-reactid=".0.8.0"&gt;Recommendations&lt;/div&gt;&lt;ul class="list-group" data-reactid=".0.8.1"&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.0"&gt;Decrease your bonds by 85%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.1"&gt;Increase your stocks by 15%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.2"&gt;Increase your etfs by 15%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.3"&gt;Increase your real estate by 15%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.4"&gt;Increase your cash by 60%.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160810 15:54:29.932" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160810 15:54:29.932" starttime="20160810 15:54:29.714"></status>
</kw>
<msg timestamp="20160810 15:54:29.933" level="FAIL">Xpath //ul/li should have matched 0 times but matched 5 times</msg>
<status status="FAIL" endtime="20160810 15:54:29.933" starttime="20160810 15:54:29.686"></status>
</kw>
<doc>This test verifies that user can't see recommendations if only 1 value is entered</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="FAIL" endtime="20160810 15:54:29.933" critical="yes" starttime="20160810 15:54:29.492">Xpath //ul/li should have matched 0 times but matched 5 times</status>
</test>
<test id="s1-s1-t3" name="User should not see recommendations when clicking submit after entering invalid values">
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>//form/input[1]</arg>
<arg>abcd</arg>
</arguments>
<msg timestamp="20160810 15:54:29.936" level="INFO">Typing text 'abcd' into text field '//form/input[1]'</msg>
<status status="PASS" endtime="20160810 15:54:30.038" starttime="20160810 15:54:29.936"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>${submitButton}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.039" level="INFO">Clicking button 'xpath=//form/input[6]'.</msg>
<status status="PASS" endtime="20160810 15:54:30.103" starttime="20160810 15:54:30.038"></status>
</kw>
<kw name="Page Should Not Contain List" library="Selenium2Library">
<doc>Verifies select list identified by `locator` is not found from current page.</doc>
<arguments>
<arg>${recommendations}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.113" level="INFO">Current page does not contain list 'xpath=//ul/li'.</msg>
<status status="PASS" endtime="20160810 15:54:30.113" starttime="20160810 15:54:30.104"></status>
</kw>
<doc>This test verifies that user can't see recommendations if invalid values are entered</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="PASS" endtime="20160810 15:54:30.113" critical="yes" starttime="20160810 15:54:29.934"></status>
</test>
<test id="s1-s1-t4" name="System should not allow negative values">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>-10</arg>
<arg>-20</arg>
<arg>-30</arg>
<arg>-40</arg>
<arg>-50</arg>
</arguments>
<assign>
<var>${testvalues}</var>
</assign>
<msg timestamp="20160810 15:54:30.116" level="INFO">${testvalues} = [u'-10', u'-20', u'-30', u'-40', u'-50']</msg>
<status status="PASS" endtime="20160810 15:54:30.116" starttime="20160810 15:54:30.115"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>the test data passed is ${testvalues}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.116" starttime="20160810 15:54:30.116"></status>
</kw>
<kw name="Fill Values">
<arguments>
<arg>${testvalues}</arg>
</arguments>
<kw type="for" name="${index} IN RANGE [ 0 | 5 ]">
<kw type="foritem" name="${index} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.118" starttime="20160810 15:54:30.117"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>value read is ${values[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.118" starttime="20160810 15:54:30.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.120" level="INFO">${xpathindex} = 1</msg>
<status status="PASS" endtime="20160810 15:54:30.120" starttime="20160810 15:54:30.119"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.120" level="INFO">${formxpath} = xpath=//form/input[1]</msg>
<status status="PASS" endtime="20160810 15:54:30.121" starttime="20160810 15:54:30.120"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.121" level="INFO">Typing text '-10' into text field 'xpath=//form/input[1]'</msg>
<status status="PASS" endtime="20160810 15:54:30.180" starttime="20160810 15:54:30.121"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.180" starttime="20160810 15:54:30.117"></status>
</kw>
<kw type="foritem" name="${index} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.181" starttime="20160810 15:54:30.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>value read is ${values[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.182" starttime="20160810 15:54:30.181"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.184" level="INFO">${xpathindex} = 2</msg>
<status status="PASS" endtime="20160810 15:54:30.184" starttime="20160810 15:54:30.183"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.185" level="INFO">${formxpath} = xpath=//form/input[2]</msg>
<status status="PASS" endtime="20160810 15:54:30.185" starttime="20160810 15:54:30.184"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.185" level="INFO">Typing text '-20' into text field 'xpath=//form/input[2]'</msg>
<status status="PASS" endtime="20160810 15:54:30.287" starttime="20160810 15:54:30.185"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.287" starttime="20160810 15:54:30.180"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.288" starttime="20160810 15:54:30.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>value read is ${values[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.289" starttime="20160810 15:54:30.288"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.291" level="INFO">${xpathindex} = 3</msg>
<status status="PASS" endtime="20160810 15:54:30.291" starttime="20160810 15:54:30.290"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.292" level="INFO">${formxpath} = xpath=//form/input[3]</msg>
<status status="PASS" endtime="20160810 15:54:30.292" starttime="20160810 15:54:30.291"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.292" level="INFO">Typing text '-30' into text field 'xpath=//form/input[3]'</msg>
<status status="PASS" endtime="20160810 15:54:30.399" starttime="20160810 15:54:30.292"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.399" starttime="20160810 15:54:30.287"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.400" starttime="20160810 15:54:30.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>value read is ${values[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.401" starttime="20160810 15:54:30.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.402" level="INFO">${xpathindex} = 4</msg>
<status status="PASS" endtime="20160810 15:54:30.402" starttime="20160810 15:54:30.401"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.403" level="INFO">${formxpath} = xpath=//form/input[4]</msg>
<status status="PASS" endtime="20160810 15:54:30.403" starttime="20160810 15:54:30.403"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.404" level="INFO">Typing text '-40' into text field 'xpath=//form/input[4]'</msg>
<status status="PASS" endtime="20160810 15:54:30.505" starttime="20160810 15:54:30.403"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.505" starttime="20160810 15:54:30.399"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.507" starttime="20160810 15:54:30.506"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>value read is ${values[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.508" starttime="20160810 15:54:30.507"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.509" level="INFO">${xpathindex} = 5</msg>
<status status="PASS" endtime="20160810 15:54:30.509" starttime="20160810 15:54:30.508"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.510" level="INFO">${formxpath} = xpath=//form/input[5]</msg>
<status status="PASS" endtime="20160810 15:54:30.510" starttime="20160810 15:54:30.509"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.510" level="INFO">Typing text '-50' into text field 'xpath=//form/input[5]'</msg>
<status status="PASS" endtime="20160810 15:54:30.614" starttime="20160810 15:54:30.510"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.615" starttime="20160810 15:54:30.506"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.615" starttime="20160810 15:54:30.117"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.615" starttime="20160810 15:54:30.117"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>${submitButton}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.617" level="INFO">Clicking button 'xpath=//form/input[6]'.</msg>
<status status="PASS" endtime="20160810 15:54:30.658" starttime="20160810 15:54:30.616"></status>
</kw>
<kw name="Xpath Should Match X Times" library="Selenium2Library">
<doc>Verifies that the page contains the given number of elements located by the given `xpath`.</doc>
<arguments>
<arg>//ul/li</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160810 15:54:30.678" level="INFO">&lt;!DOCTYPE html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;
    &lt;!-- Not present in the tutorial. Just for basic styling. --&gt;
    &lt;link rel="stylesheet" href="main.css" /&gt;
    &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" /&gt;

   
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js"&gt;&lt;/script&gt;
  &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js"&gt;&lt;/script&gt;
  
&lt;script&gt;



      var AssetManager = React.createClass({displayName: "AssetManager",
        getInitialState: function() {
          return {
            risk: 1, 
            expected: {
              bonds: 10, 
              stocks: 0, 
              etfs: 0, 
              realEstate: 0, 
              cash: 90
            }, 
            actualBonds: 0, 
            actualStocks: 0, 
            actualEtfs: 0, 
            actualRealEstate: 0, 
            actualCash: 0, 
            insights: []
          }
        }, 
        handleChange: function(e) {
          this.setState({
            risk: e.target.value, 
            expected: {
              bonds: this.props.possibilities[e.target.value][0],
              stocks: this.props.possibilities[e.target.value][1],
              etfs: this.props.possibilities[e.target.value][2],
              realEstate: this.props.possibilities[e.target.value][3],
              cash: this.props.possibilities[e.target.value][4]
            }
          })
        }, 
        handleUpdate: function(name, e) {
          console.log('here is name', name, 'here is e', e.target.value)
          var newState = {};
          newState[name] = Number(e.target.value);
          this.setState(newState)
          console.log(this.state)
        },

        handleSubmit: function(e) {
          e.preventDefault()

          var actualPercents = {
          }
          var totalAmount = 0;
          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              totalAmount += this.state[key];
            }
          }

          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              actualPercents[key] = Math.round(this.state[key]/totalAmount * 100);
              console.log('hello');
            }
          }
          var insights = [];
          
          if (actualPercents.actualBonds &amp;gt; this.state.expected.bonds + 5) {
            var diff = actualPercents.actualBonds - this.state.expected.bonds;
            insights.push("Decrease your bonds by " + diff + "%.");
          } else if (actualPercents.actualBonds &amp;lt; this.state.expected.bonds - 5 ) {
            var diff = this.state.expected.bonds - actualPercents.actualBonds;
            insights.push("Increase your bonds by " + diff + "%.");
          }

          if (actualPercents.actualStocks &amp;gt; this.state.expected.stocks + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.stocks;
            insights.push("Decrease your stocks by " + diff + "%.");
          } else if (actualPercents.actualStocks &amp;lt; this.state.expected.stocks - 5 ) {
            var diff = this.state.expected.stocks - actualPercents.actualStocks;
            insights.push("Increase your stocks by " + diff + "%.");
          }

          if (actualPercents.actualEtfs &amp;gt; this.state.expected.etfs + 5) {
            var diff = actualPercents.actualEtfs - this.state.expected.etfs;
            insights.push("Decrease your etfs by " + diff + "%.");
          } else if (actualPercents.actualEtfs &amp;lt; this.state.expected.etfs - 5 ) {
            var diff = this.state.expected.etfs - actualPercents.actualEtfs;
            insights.push("Increase your etfs by " + diff + "%.");
          }

          if (actualPercents.actualRealEstate &amp;gt; this.state.expected.realEstate + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.realEstate;
            insights.push("Decrease your real estate by " + diff + "%.");
          } else if (actualPercents.actualRealEstate &amp;lt; this.state.expected.realEstate - 5 ) {
            var diff = this.state.expected.realEstate - actualPercents.actualRealEstate;
            insights.push("Increase your real estate by " + diff + "%.");
          }

          if (actualPercents.actualCash &amp;gt; this.state.expected.cash + 5) {
            var diff = actualPercents.actualCash - this.state.expected.cash;
            insights.push("Decrease your cash by " + diff + "%.");
          } else if (actualPercents.actualCash &amp;lt; this.state.expected.cash - 5 ) {
            var diff = this.state.expected.cash - actualPercents.actualCash;
            insights.push("Increase your cash by " + diff + "%.");
          }

          console.log('here are the insights', insights);
          this.setState({
            insights: insights
          })

          console.log('what is the state obj', this.state);
        },
        render: function() {
          return (
            React.createElement("div", {className: "assetManager"}, 
              React.createElement("h1", {className: "jumbotron"}, " Asset Manager "), 

              React.createElement("p", null, " What does your risk profile look like? "), 
              React.createElement("button", {className: "btn btn-primary", type: "button"}, 
                "Risk ", React.createElement("span", {className: "badge"}, this.state.risk)
              ), 
              React.createElement("input", {type: "range", id: "risk", name: "risk", min: "0", max: "10", onChange: this.handleChange}), 
              React.createElement("output", {for: "risk", onforminput: "value = risk.valueAsNumber;"}), 
              React.createElement("div", null, 
              React.createElement("span", {className: "testing"}, " Bonds: ", this.props.possibilities[this.state.risk][0], "% "), 
              React.createElement("span", null, " Stocks: ", this.props.possibilities[this.state.risk][1], "% "), 
              React.createElement("span", null, " ETFs: ", this.props.possibilities[this.state.risk][2], "% "), 
              React.createElement("span", null, " Real Estate: ", this.props.possibilities[this.state.risk][3], "% "), 
              React.createElement("span", null, " Cash: ", this.props.possibilities[this.state.risk][4], "% ")
              ), 
              React.createElement("h6", null, " ", React.createElement("i", null, " What does your current portfolio look like? Please provide $ value for all categories. "), " "), 
              React.createElement("form", {onSubmit: this.handleSubmit}, 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualBonds'), placeholder: "Bonds"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualStocks'), placeholder: "Stocks"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualEtfs'), placeholder: "ETFs"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualRealEstate'), placeholder: "Real Estate"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualCash'), placeholder: "Cash"}), 
                React.createElement("input", {type: "submit"})
                ), 
              React.createElement(ListOfInsights, React.__spread({},  this.props, {data: this.state.insights}))
            )
            );
        }
      });

      var Slider = React.createClass({displayName: "Slider",
        render: function() {
          console.log("what is the state now", this.state)
          return (
            React.createElement("div", {className: "slider"}, 
              "Here is the slider", 
              React.createElement("input", {type: "text", placeholder: "risk number"}), 
              React.createElement("input", {type: "submit"}, " Hello ")
            )
          );
        }
      });

      var Chart = React.createClass({displayName: "Chart",
        render: function() {
          return (
            React.createElement("div", {className: "chart"}, 
              "Here is the chart!" + ' ' +
              "Here is the set of associated data"
            )
          );
        }
      });

      var Portfolio = React.createClass({displayName: "Portfolio",
        render: function() {
          return (
            React.createElement("div", {className: "portfolio"}, 
              "Please fill in your portfolio inputs", 
              React.createElement("input", {type: "text", placeholder: "Bonds"}), 
              React.createElement("input", {type: "text", placeholder: "Stocks"}), 
              React.createElement("input", {type: "text", placeholder: "ETFs"}), 
              React.createElement("input", {type: "text", placeholder: "Real Estate"}), 
              React.createElement("input", {type: "text", placeholder: "Cash"})
            )
          );
        }
      });

      var ListOfInsights = React.createClass({displayName: "ListOfInsights",
        render: function() {
          console.log('here are the insights', this.props.data);
          var list = this.props.data.map(function(insight) {
            return (
              React.createElement("li", {className: "list-group-item"}, insight)
            )
          });

          return (
            React.createElement("div", {className: "panel panel-default"}, 
              React.createElement("div", {className: "panel-heading"}, "Recommendations"), 
              React.createElement("ul", {className: "list-group"}, 
                list
              )
            )
          );
        }
      });
      
      var options = {
        possibilities: {
          1: [10, 0, 0, 0, 90],
        2: [10, 10, 0, 0, 80], 
        3: [10, 10, 10, 0, 70], 
        4: [20, 10, 10, 0, 60], 
        5: [15, 15, 10, 10, 50], 
        6: [15, 15, 15, 15, 60], 
        7: [10, 20, 20, 20, 30], 
        8: [5, 30, 10, 30, 20], 
        9: [0, 40, 5, 35, 20], 
        10: [5, 40, 5, 40, 10]
        },
        insights: []
      }
      var element = React.createElement(AssetManager, options);

      ReactDOM.render(element, document.body);
    
//# sourceMappingURL=data:application/json;base64,&lt;/script&gt;&lt;/head&gt;
  
  &lt;body&gt;&lt;div class="assetManager" data-reactid=".0"&gt;&lt;h1 class="jumbotron" data-reactid=".0.0"&gt; Asset Manager &lt;/h1&gt;&lt;p data-reactid=".0.1"&gt; What does your risk profile look like? &lt;/p&gt;&lt;button class="btn btn-primary" type="button" data-reactid=".0.2"&gt;&lt;span data-reactid=".0.2.0"&gt;Risk &lt;/span&gt;&lt;span class="badge" data-reactid=".0.2.1"&gt;6&lt;/span&gt;&lt;/button&gt;&lt;input type="range" id="risk" name="risk" min="0" max="10" data-reactid=".0.3" /&gt;&lt;output data-reactid=".0.4"&gt;&lt;/output&gt;&lt;div data-reactid=".0.5"&gt;&lt;span class="testing" data-reactid=".0.5.0"&gt;&lt;span data-reactid=".0.5.0.0"&gt; Bonds: &lt;/span&gt;&lt;span data-reactid=".0.5.0.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.0.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.1"&gt;&lt;span data-reactid=".0.5.1.0"&gt; Stocks: &lt;/span&gt;&lt;span data-reactid=".0.5.1.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.1.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.2"&gt;&lt;span data-reactid=".0.5.2.0"&gt; ETFs: &lt;/span&gt;&lt;span data-reactid=".0.5.2.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.2.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.3"&gt;&lt;span data-reactid=".0.5.3.0"&gt; Real Estate: &lt;/span&gt;&lt;span data-reactid=".0.5.3.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.3.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.4"&gt;&lt;span data-reactid=".0.5.4.0"&gt; Cash: &lt;/span&gt;&lt;span data-reactid=".0.5.4.1"&gt;60&lt;/span&gt;&lt;span data-reactid=".0.5.4.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;h6 data-reactid=".0.6"&gt;&lt;span data-reactid=".0.6.0"&gt; &lt;/span&gt;&lt;i data-reactid=".0.6.1"&gt; What does your current portfolio look like? Please provide $ value for all categories. &lt;/i&gt;&lt;span data-reactid=".0.6.2"&gt; &lt;/span&gt;&lt;/h6&gt;&lt;form data-reactid=".0.7"&gt;&lt;input type="text" placeholder="Bonds" data-reactid=".0.7.0" /&gt;&lt;input type="text" placeholder="Stocks" data-reactid=".0.7.1" /&gt;&lt;input type="text" placeholder="ETFs" data-reactid=".0.7.2" /&gt;&lt;input type="text" placeholder="Real Estate" data-reactid=".0.7.3" /&gt;&lt;input type="text" placeholder="Cash" data-reactid=".0.7.4" /&gt;&lt;input type="submit" data-reactid=".0.7.5" /&gt;&lt;/form&gt;&lt;div class="panel panel-default" data-reactid=".0.8"&gt;&lt;div class="panel-heading" data-reactid=".0.8.0"&gt;Recommendations&lt;/div&gt;&lt;ul class="list-group" data-reactid=".0.8.1"&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.0"&gt;Increase your bonds by 8%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.1"&gt;Decrease your real estate by -2%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.2"&gt;Increase your cash by 27%.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160810 15:54:30.797" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160810 15:54:30.798" starttime="20160810 15:54:30.679"></status>
</kw>
<msg timestamp="20160810 15:54:30.798" level="FAIL">Xpath //ul/li should have matched 0 times but matched 3 times</msg>
<status status="FAIL" endtime="20160810 15:54:30.798" starttime="20160810 15:54:30.658"></status>
</kw>
<doc>This test verifies that system doesn't allow negative numbers</doc>
<tags>
<tag>Negative</tag>
</tags>
<status status="FAIL" endtime="20160810 15:54:30.799" critical="yes" starttime="20160810 15:54:30.114">Xpath //ul/li should have matched 0 times but matched 3 times</status>
</test>
<test id="s1-s1-t5" name="User should see recommendations on entering all values">
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.846" starttime="20160810 15:54:30.801"></status>
</kw>
<kw name="Csv File Length" library="csvLibrary">
<doc>This creates a keyword named "CSV File Length"</doc>
<arguments>
<arg>./Tests/positivedata.csv</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20160810 15:54:30.847" level="INFO">${length} = 10</msg>
<status status="PASS" endtime="20160810 15:54:30.847" starttime="20160810 15:54:30.846"></status>
</kw>
<kw name="Read Csv File" library="csvLibrary">
<doc>This creates a keyword named "Read CSV File"</doc>
<arguments>
<arg>./Tests/positivedata.csv</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160810 15:54:30.849" level="INFO">${data} = [['100', '200', '300', '400', '900'], ['100', '100', '0', '0', '800'], ['100', '100', '100', '0', '700'], ['200', '100', '100', '0', '600'], ['100', '0', '0', '0', '900'], ['150', '150', '150', '150',...</msg>
<status status="PASS" endtime="20160810 15:54:30.849" starttime="20160810 15:54:30.848"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Length of csv file is ${length}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.850" starttime="20160810 15:54:30.849"></status>
</kw>
<kw type="for" name="${index} IN RANGE [ 0 | ${length} ]">
<kw type="foritem" name="${index} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.852" starttime="20160810 15:54:30.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.853" starttime="20160810 15:54:30.852"></status>
</kw>
<kw name="Enter Multi Row values">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Entering values</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.855" starttime="20160810 15:54:30.855"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:30.856" starttime="20160810 15:54:30.855"></status>
</kw>
<kw type="for" name="${index} IN RANGE [ 0 | 5 ]">
<kw type="foritem" name="${index} = 0">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.857" level="INFO">${xpathindex} = 1</msg>
<status status="PASS" endtime="20160810 15:54:30.857" starttime="20160810 15:54:30.856"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.858" level="INFO">${formxpath} = xpath=//form/input[1]</msg>
<status status="PASS" endtime="20160810 15:54:30.858" starttime="20160810 15:54:30.857"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.859" level="INFO">Typing text '100' into text field 'xpath=//form/input[1]'</msg>
<status status="PASS" endtime="20160810 15:54:30.920" starttime="20160810 15:54:30.858"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:30.920" starttime="20160810 15:54:30.856"></status>
</kw>
<kw type="foritem" name="${index} = 1">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:30.922" level="INFO">${xpathindex} = 2</msg>
<status status="PASS" endtime="20160810 15:54:30.922" starttime="20160810 15:54:30.920"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:30.923" level="INFO">${formxpath} = xpath=//form/input[2]</msg>
<status status="PASS" endtime="20160810 15:54:30.923" starttime="20160810 15:54:30.922"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:30.923" level="INFO">Typing text '200' into text field 'xpath=//form/input[2]'</msg>
<status status="PASS" endtime="20160810 15:54:31.029" starttime="20160810 15:54:30.923"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:31.029" starttime="20160810 15:54:30.920"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:31.032" level="INFO">${xpathindex} = 3</msg>
<status status="PASS" endtime="20160810 15:54:31.032" starttime="20160810 15:54:31.030"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:31.033" level="INFO">${formxpath} = xpath=//form/input[3]</msg>
<status status="PASS" endtime="20160810 15:54:31.033" starttime="20160810 15:54:31.033"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.034" level="INFO">Typing text '300' into text field 'xpath=//form/input[3]'</msg>
<status status="PASS" endtime="20160810 15:54:31.105" starttime="20160810 15:54:31.034"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:31.105" starttime="20160810 15:54:31.029"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:31.108" level="INFO">${xpathindex} = 4</msg>
<status status="PASS" endtime="20160810 15:54:31.108" starttime="20160810 15:54:31.106"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:31.108" level="INFO">${formxpath} = xpath=//form/input[4]</msg>
<status status="PASS" endtime="20160810 15:54:31.108" starttime="20160810 15:54:31.108"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.109" level="INFO">Typing text '400' into text field 'xpath=//form/input[4]'</msg>
<status status="PASS" endtime="20160810 15:54:31.206" starttime="20160810 15:54:31.108"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:31.206" starttime="20160810 15:54:31.105"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}+1</arg>
</arguments>
<assign>
<var>${xpathindex}</var>
</assign>
<msg timestamp="20160810 15:54:31.208" level="INFO">${xpathindex} = 5</msg>
<status status="PASS" endtime="20160810 15:54:31.208" starttime="20160810 15:54:31.207"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//form/input[</arg>
<arg>${xpathindex}</arg>
<arg>]</arg>
</arguments>
<assign>
<var>${formxpath}</var>
</assign>
<msg timestamp="20160810 15:54:31.209" level="INFO">${formxpath} = xpath=//form/input[5]</msg>
<status status="PASS" endtime="20160810 15:54:31.209" starttime="20160810 15:54:31.208"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${formxpath}</arg>
<arg>${values[${index}]}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.209" level="INFO">Typing text '900' into text field 'xpath=//form/input[5]'</msg>
<status status="PASS" endtime="20160810 15:54:31.280" starttime="20160810 15:54:31.209"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:31.281" starttime="20160810 15:54:31.206"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:31.281" starttime="20160810 15:54:30.856"></status>
</kw>
<kw name="Click Button" library="Selenium2Library">
<doc>Clicks a button identified by `locator`.</doc>
<arguments>
<arg>${submitButton}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.282" level="INFO">Clicking button 'xpath=//form/input[6]'.</msg>
<status status="PASS" endtime="20160810 15:54:31.321" starttime="20160810 15:54:31.281"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${recommendations}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.329" level="INFO">Current page contains element 'xpath=//ul/li'.</msg>
<status status="PASS" endtime="20160810 15:54:31.330" starttime="20160810 15:54:31.321"></status>
</kw>
<kw name="Page Should Contain" library="Selenium2Library">
<doc>Verifies that current page contains `text`.</doc>
<arguments>
<arg>your bonds by</arg>
</arguments>
<msg timestamp="20160810 15:54:31.352" level="INFO">Current page contains text 'your bonds by'.</msg>
<status status="PASS" endtime="20160810 15:54:31.352" starttime="20160810 15:54:31.330"></status>
</kw>
<kw name="Xpath Should Match X Times" library="Selenium2Library">
<doc>Verifies that the page contains the given number of elements located by the given `xpath`.</doc>
<arguments>
<arg>//ul/li</arg>
<arg>5</arg>
<arg>loglevel=INFO</arg>
</arguments>
<msg timestamp="20160810 15:54:31.368" level="INFO">&lt;!DOCTYPE html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;
    &lt;!-- Not present in the tutorial. Just for basic styling. --&gt;
    &lt;link rel="stylesheet" href="main.css" /&gt;
    &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" /&gt;

   
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js"&gt;&lt;/script&gt;
  &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js"&gt;&lt;/script&gt;
  
&lt;script&gt;



      var AssetManager = React.createClass({displayName: "AssetManager",
        getInitialState: function() {
          return {
            risk: 1, 
            expected: {
              bonds: 10, 
              stocks: 0, 
              etfs: 0, 
              realEstate: 0, 
              cash: 90
            }, 
            actualBonds: 0, 
            actualStocks: 0, 
            actualEtfs: 0, 
            actualRealEstate: 0, 
            actualCash: 0, 
            insights: []
          }
        }, 
        handleChange: function(e) {
          this.setState({
            risk: e.target.value, 
            expected: {
              bonds: this.props.possibilities[e.target.value][0],
              stocks: this.props.possibilities[e.target.value][1],
              etfs: this.props.possibilities[e.target.value][2],
              realEstate: this.props.possibilities[e.target.value][3],
              cash: this.props.possibilities[e.target.value][4]
            }
          })
        }, 
        handleUpdate: function(name, e) {
          console.log('here is name', name, 'here is e', e.target.value)
          var newState = {};
          newState[name] = Number(e.target.value);
          this.setState(newState)
          console.log(this.state)
        },

        handleSubmit: function(e) {
          e.preventDefault()

          var actualPercents = {
          }
          var totalAmount = 0;
          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              totalAmount += this.state[key];
            }
          }

          for (var key in this.state) {
            if (key !== 'risk' &amp;amp;&amp;amp; key !== 'expected' &amp;amp;&amp;amp; key !== 'insights') {
              actualPercents[key] = Math.round(this.state[key]/totalAmount * 100);
              console.log('hello');
            }
          }
          var insights = [];
          
          if (actualPercents.actualBonds &amp;gt; this.state.expected.bonds + 5) {
            var diff = actualPercents.actualBonds - this.state.expected.bonds;
            insights.push("Decrease your bonds by " + diff + "%.");
          } else if (actualPercents.actualBonds &amp;lt; this.state.expected.bonds - 5 ) {
            var diff = this.state.expected.bonds - actualPercents.actualBonds;
            insights.push("Increase your bonds by " + diff + "%.");
          }

          if (actualPercents.actualStocks &amp;gt; this.state.expected.stocks + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.stocks;
            insights.push("Decrease your stocks by " + diff + "%.");
          } else if (actualPercents.actualStocks &amp;lt; this.state.expected.stocks - 5 ) {
            var diff = this.state.expected.stocks - actualPercents.actualStocks;
            insights.push("Increase your stocks by " + diff + "%.");
          }

          if (actualPercents.actualEtfs &amp;gt; this.state.expected.etfs + 5) {
            var diff = actualPercents.actualEtfs - this.state.expected.etfs;
            insights.push("Decrease your etfs by " + diff + "%.");
          } else if (actualPercents.actualEtfs &amp;lt; this.state.expected.etfs - 5 ) {
            var diff = this.state.expected.etfs - actualPercents.actualEtfs;
            insights.push("Increase your etfs by " + diff + "%.");
          }

          if (actualPercents.actualRealEstate &amp;gt; this.state.expected.realEstate + 5) {
            var diff = actualPercents.actualStocks - this.state.expected.realEstate;
            insights.push("Decrease your real estate by " + diff + "%.");
          } else if (actualPercents.actualRealEstate &amp;lt; this.state.expected.realEstate - 5 ) {
            var diff = this.state.expected.realEstate - actualPercents.actualRealEstate;
            insights.push("Increase your real estate by " + diff + "%.");
          }

          if (actualPercents.actualCash &amp;gt; this.state.expected.cash + 5) {
            var diff = actualPercents.actualCash - this.state.expected.cash;
            insights.push("Decrease your cash by " + diff + "%.");
          } else if (actualPercents.actualCash &amp;lt; this.state.expected.cash - 5 ) {
            var diff = this.state.expected.cash - actualPercents.actualCash;
            insights.push("Increase your cash by " + diff + "%.");
          }

          console.log('here are the insights', insights);
          this.setState({
            insights: insights
          })

          console.log('what is the state obj', this.state);
        },
        render: function() {
          return (
            React.createElement("div", {className: "assetManager"}, 
              React.createElement("h1", {className: "jumbotron"}, " Asset Manager "), 

              React.createElement("p", null, " What does your risk profile look like? "), 
              React.createElement("button", {className: "btn btn-primary", type: "button"}, 
                "Risk ", React.createElement("span", {className: "badge"}, this.state.risk)
              ), 
              React.createElement("input", {type: "range", id: "risk", name: "risk", min: "0", max: "10", onChange: this.handleChange}), 
              React.createElement("output", {for: "risk", onforminput: "value = risk.valueAsNumber;"}), 
              React.createElement("div", null, 
              React.createElement("span", {className: "testing"}, " Bonds: ", this.props.possibilities[this.state.risk][0], "% "), 
              React.createElement("span", null, " Stocks: ", this.props.possibilities[this.state.risk][1], "% "), 
              React.createElement("span", null, " ETFs: ", this.props.possibilities[this.state.risk][2], "% "), 
              React.createElement("span", null, " Real Estate: ", this.props.possibilities[this.state.risk][3], "% "), 
              React.createElement("span", null, " Cash: ", this.props.possibilities[this.state.risk][4], "% ")
              ), 
              React.createElement("h6", null, " ", React.createElement("i", null, " What does your current portfolio look like? Please provide $ value for all categories. "), " "), 
              React.createElement("form", {onSubmit: this.handleSubmit}, 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualBonds'), placeholder: "Bonds"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualStocks'), placeholder: "Stocks"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualEtfs'), placeholder: "ETFs"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualRealEstate'), placeholder: "Real Estate"}), 
                React.createElement("input", {type: "text", onChange: this.handleUpdate.bind(this, 'actualCash'), placeholder: "Cash"}), 
                React.createElement("input", {type: "submit"})
                ), 
              React.createElement(ListOfInsights, React.__spread({},  this.props, {data: this.state.insights}))
            )
            );
        }
      });

      var Slider = React.createClass({displayName: "Slider",
        render: function() {
          console.log("what is the state now", this.state)
          return (
            React.createElement("div", {className: "slider"}, 
              "Here is the slider", 
              React.createElement("input", {type: "text", placeholder: "risk number"}), 
              React.createElement("input", {type: "submit"}, " Hello ")
            )
          );
        }
      });

      var Chart = React.createClass({displayName: "Chart",
        render: function() {
          return (
            React.createElement("div", {className: "chart"}, 
              "Here is the chart!" + ' ' +
              "Here is the set of associated data"
            )
          );
        }
      });

      var Portfolio = React.createClass({displayName: "Portfolio",
        render: function() {
          return (
            React.createElement("div", {className: "portfolio"}, 
              "Please fill in your portfolio inputs", 
              React.createElement("input", {type: "text", placeholder: "Bonds"}), 
              React.createElement("input", {type: "text", placeholder: "Stocks"}), 
              React.createElement("input", {type: "text", placeholder: "ETFs"}), 
              React.createElement("input", {type: "text", placeholder: "Real Estate"}), 
              React.createElement("input", {type: "text", placeholder: "Cash"})
            )
          );
        }
      });

      var ListOfInsights = React.createClass({displayName: "ListOfInsights",
        render: function() {
          console.log('here are the insights', this.props.data);
          var list = this.props.data.map(function(insight) {
            return (
              React.createElement("li", {className: "list-group-item"}, insight)
            )
          });

          return (
            React.createElement("div", {className: "panel panel-default"}, 
              React.createElement("div", {className: "panel-heading"}, "Recommendations"), 
              React.createElement("ul", {className: "list-group"}, 
                list
              )
            )
          );
        }
      });
      
      var options = {
        possibilities: {
          1: [10, 0, 0, 0, 90],
        2: [10, 10, 0, 0, 80], 
        3: [10, 10, 10, 0, 70], 
        4: [20, 10, 10, 0, 60], 
        5: [15, 15, 10, 10, 50], 
        6: [15, 15, 15, 15, 60], 
        7: [10, 20, 20, 20, 30], 
        8: [5, 30, 10, 30, 20], 
        9: [0, 40, 5, 35, 20], 
        10: [5, 40, 5, 40, 10]
        },
        insights: []
      }
      var element = React.createElement(AssetManager, options);

      ReactDOM.render(element, document.body);
    
//# sourceMappingURL=data:application/json;base64,&lt;/script&gt;&lt;/head&gt;
  
  &lt;body&gt;&lt;div class="assetManager" data-reactid=".0"&gt;&lt;h1 class="jumbotron" data-reactid=".0.0"&gt; Asset Manager &lt;/h1&gt;&lt;p data-reactid=".0.1"&gt; What does your risk profile look like? &lt;/p&gt;&lt;button class="btn btn-primary" type="button" data-reactid=".0.2"&gt;&lt;span data-reactid=".0.2.0"&gt;Risk &lt;/span&gt;&lt;span class="badge" data-reactid=".0.2.1"&gt;6&lt;/span&gt;&lt;/button&gt;&lt;input type="range" id="risk" name="risk" min="0" max="10" data-reactid=".0.3" /&gt;&lt;output data-reactid=".0.4"&gt;&lt;/output&gt;&lt;div data-reactid=".0.5"&gt;&lt;span class="testing" data-reactid=".0.5.0"&gt;&lt;span data-reactid=".0.5.0.0"&gt; Bonds: &lt;/span&gt;&lt;span data-reactid=".0.5.0.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.0.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.1"&gt;&lt;span data-reactid=".0.5.1.0"&gt; Stocks: &lt;/span&gt;&lt;span data-reactid=".0.5.1.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.1.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.2"&gt;&lt;span data-reactid=".0.5.2.0"&gt; ETFs: &lt;/span&gt;&lt;span data-reactid=".0.5.2.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.2.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.3"&gt;&lt;span data-reactid=".0.5.3.0"&gt; Real Estate: &lt;/span&gt;&lt;span data-reactid=".0.5.3.1"&gt;15&lt;/span&gt;&lt;span data-reactid=".0.5.3.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;span data-reactid=".0.5.4"&gt;&lt;span data-reactid=".0.5.4.0"&gt; Cash: &lt;/span&gt;&lt;span data-reactid=".0.5.4.1"&gt;60&lt;/span&gt;&lt;span data-reactid=".0.5.4.2"&gt;% &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;h6 data-reactid=".0.6"&gt;&lt;span data-reactid=".0.6.0"&gt; &lt;/span&gt;&lt;i data-reactid=".0.6.1"&gt; What does your current portfolio look like? Please provide $ value for all categories. &lt;/i&gt;&lt;span data-reactid=".0.6.2"&gt; &lt;/span&gt;&lt;/h6&gt;&lt;form data-reactid=".0.7"&gt;&lt;input type="text" placeholder="Bonds" data-reactid=".0.7.0" /&gt;&lt;input type="text" placeholder="Stocks" data-reactid=".0.7.1" /&gt;&lt;input type="text" placeholder="ETFs" data-reactid=".0.7.2" /&gt;&lt;input type="text" placeholder="Real Estate" data-reactid=".0.7.3" /&gt;&lt;input type="text" placeholder="Cash" data-reactid=".0.7.4" /&gt;&lt;input type="submit" data-reactid=".0.7.5" /&gt;&lt;/form&gt;&lt;div class="panel panel-default" data-reactid=".0.8"&gt;&lt;div class="panel-heading" data-reactid=".0.8.0"&gt;Recommendations&lt;/div&gt;&lt;ul class="list-group" data-reactid=".0.8.1"&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.0"&gt;Increase your bonds by 10%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.1"&gt;Decrease your real estate by -4%.&lt;/li&gt;&lt;li class="list-group-item" data-reactid=".0.8.1.2"&gt;Increase your cash by 13%.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160810 15:54:31.490" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160810 15:54:31.491" starttime="20160810 15:54:31.369"></status>
</kw>
<msg timestamp="20160810 15:54:31.491" level="FAIL">Xpath //ul/li should have matched 5 times but matched 3 times</msg>
<status status="FAIL" endtime="20160810 15:54:31.491" starttime="20160810 15:54:31.352"></status>
</kw>
<status status="FAIL" endtime="20160810 15:54:31.491" starttime="20160810 15:54:30.853"></status>
</kw>
<status status="FAIL" endtime="20160810 15:54:31.491" starttime="20160810 15:54:30.851"></status>
</kw>
<status status="FAIL" endtime="20160810 15:54:31.492" starttime="20160810 15:54:30.850"></status>
</kw>
<doc>This test verifies that user can enter values and verify if recommendations are generated</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" endtime="20160810 15:54:31.492" critical="yes" starttime="20160810 15:54:30.800">Xpath //ul/li should have matched 5 times but matched 3 times</status>
</test>
<kw type="teardown" name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" endtime="20160810 15:54:31.672" starttime="20160810 15:54:31.494"></status>
</kw>
<doc>test suite for checking the value entry and recommendations</doc>
<status status="FAIL" endtime="20160810 15:54:31.672" starttime="20160810 15:54:25.989"></status>
</suite>
<suite source="/Users/Sweta/Documents/RobotFramework/Tests/Risk_Profile_Slider.robot" id="s1-s2" name="Risk Profile Slider">
<test id="s1-s2-t1" name="User can open page and see the title">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>http://localhost:8080/asset-manager-react1</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20160810 15:54:31.686" level="INFO">Opening browser 'chrome' to base url 'http://localhost:8080/asset-manager-react1'</msg>
<status status="PASS" endtime="20160810 15:54:34.747" starttime="20160810 15:54:31.686"></status>
</kw>
<kw name="Maximize Browser Window" library="Selenium2Library">
<doc>Maximizes current browser window.</doc>
<status status="PASS" endtime="20160810 15:54:35.053" starttime="20160810 15:54:34.748"></status>
</kw>
<kw name="Wait Until Page Contains" library="Selenium2Library">
<doc>Waits until `text` appears on current page.</doc>
<arguments>
<arg>React Tutorial</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.076" starttime="20160810 15:54:35.053"></status>
</kw>
<kw name="Title Should Be" library="Selenium2Library">
<doc>Verifies that current page title equals `title`.</doc>
<arguments>
<arg>React Tutorial</arg>
</arguments>
<msg timestamp="20160810 15:54:35.082" level="INFO">Page title is 'React Tutorial'.</msg>
<status status="PASS" endtime="20160810 15:54:35.082" starttime="20160810 15:54:35.076"></status>
</kw>
<doc>This is for title verification</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" endtime="20160810 15:54:35.082" critical="yes" starttime="20160810 15:54:31.685"></status>
</test>
<test id="s1-s2-t2" name="User can view text on page">
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${heading}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.104" level="INFO">Current page contains element 'xpath=//h1[contains(text(),'Asset Manager')]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.104" starttime="20160810 15:54:35.084"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${rating}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.124" level="INFO">Current page contains element 'xpath=//span[@class='badge']'.</msg>
<status status="PASS" endtime="20160810 15:54:35.124" starttime="20160810 15:54:35.105"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${question}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.142" level="INFO">Current page contains element 'xpath=//p[contains(text(), 'What does your risk profile look like?')]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.143" starttime="20160810 15:54:35.125"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${slider_locator}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.161" level="INFO">Current page contains element 'name=risk'.</msg>
<status status="PASS" endtime="20160810 15:54:35.162" starttime="20160810 15:54:35.143"></status>
</kw>
<kw name="Get Text" library="Selenium2Library">
<doc>Returns the text value of element identified by `locator`.</doc>
<arguments>
<arg>${rating}</arg>
</arguments>
<assign>
<var>${ratingval}</var>
</assign>
<msg timestamp="20160810 15:54:35.202" level="INFO">${ratingval} = 1</msg>
<status status="PASS" endtime="20160810 15:54:35.202" starttime="20160810 15:54:35.162"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.232" level="INFO">${sliderval} = 5</msg>
<status status="PASS" endtime="20160810 15:54:35.232" starttime="20160810 15:54:35.202"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${ratingval}</arg>
<arg>${sliderval}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.233" level="FAIL">1 != 5</msg>
<status status="FAIL" endtime="20160810 15:54:35.233" starttime="20160810 15:54:35.232"></status>
</kw>
<doc>This is for static text verification</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" endtime="20160810 15:54:35.234" critical="yes" starttime="20160810 15:54:35.083">1 != 5</status>
</test>
<test id="s1-s2-t3" name="User should be able to move slider right">
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.255" level="INFO">${sliderval} = 5</msg>
<status status="PASS" endtime="20160810 15:54:35.255" starttime="20160810 15:54:35.235"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.256" starttime="20160810 15:54:35.256"></status>
</kw>
<kw name="Read Csv File" library="csvLibrary">
<doc>This creates a keyword named "Read CSV File"</doc>
<arguments>
<arg>./Tests/ratings.csv</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160810 15:54:35.257" level="INFO">${data} = [['1', '10', '0', '0', '0', '90'], ['2', '10', '10', '0', '0', '80'], ['3', '10', '10', '10', '0', '70'], ['4', '20', '10', '10', '0', '60'], ['5', '10', '0', '0', '0', '90'], ['6', '15', '15', '15', ...</msg>
<status status="PASS" endtime="20160810 15:54:35.257" starttime="20160810 15:54:35.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[0]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.258" starttime="20160810 15:54:35.257"></status>
</kw>
<kw type="for" name="${index} IN RANGE [ 4 | 9 ]">
<kw type="foritem" name="${index} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.259" starttime="20160810 15:54:35.258"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.260" starttime="20160810 15:54:35.259"></status>
</kw>
<kw name="Move Slider And Check">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.261" starttime="20160810 15:54:35.260"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[1]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${bond}</var>
</assign>
<msg timestamp="20160810 15:54:35.262" level="INFO">${bond} = xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"10")]</msg>
<status status="PASS" endtime="20160810 15:54:35.262" starttime="20160810 15:54:35.261"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.262" starttime="20160810 15:54:35.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[2]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<msg timestamp="20160810 15:54:35.263" level="INFO">${stock} = xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"0")]</msg>
<status status="PASS" endtime="20160810 15:54:35.263" starttime="20160810 15:54:35.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[3]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${etf}</var>
</assign>
<msg timestamp="20160810 15:54:35.264" level="INFO">${etf} = xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"0")]</msg>
<status status="PASS" endtime="20160810 15:54:35.264" starttime="20160810 15:54:35.263"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[4]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${realestate}</var>
</assign>
<msg timestamp="20160810 15:54:35.264" level="INFO">${realestate} = xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"0")]</msg>
<status status="PASS" endtime="20160810 15:54:35.264" starttime="20160810 15:54:35.264"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[5]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${cash}</var>
</assign>
<msg timestamp="20160810 15:54:35.265" level="INFO">${cash} = xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"90")]</msg>
<status status="PASS" endtime="20160810 15:54:35.265" starttime="20160810 15:54:35.264"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.283" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"10")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.283" starttime="20160810 15:54:35.265"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${stock}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.302" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"0")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.302" starttime="20160810 15:54:35.283"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${etf}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.321" level="INFO">Current page contains element 'xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"0")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.321" starttime="20160810 15:54:35.303"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${realestate}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.339" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"0")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.339" starttime="20160810 15:54:35.322"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${cash}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.357" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"90")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.357" starttime="20160810 15:54:35.339"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.357" starttime="20160810 15:54:35.260"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.411" starttime="20160810 15:54:35.358"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.426" level="INFO">${sliderval} = 6</msg>
<status status="PASS" endtime="20160810 15:54:35.426" starttime="20160810 15:54:35.411"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.427" starttime="20160810 15:54:35.426"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${offset}+100</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20160810 15:54:35.429" level="INFO">${offset} = 200</msg>
<status status="PASS" endtime="20160810 15:54:35.430" starttime="20160810 15:54:35.427"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${offset}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.430" starttime="20160810 15:54:35.430"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.430" starttime="20160810 15:54:35.258"></status>
</kw>
<kw type="foritem" name="${index} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.431" starttime="20160810 15:54:35.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.432" starttime="20160810 15:54:35.431"></status>
</kw>
<kw name="Move Slider And Check">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.433" starttime="20160810 15:54:35.432"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[1]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${bond}</var>
</assign>
<msg timestamp="20160810 15:54:35.434" level="INFO">${bond} = xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"15")]</msg>
<status status="PASS" endtime="20160810 15:54:35.434" starttime="20160810 15:54:35.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.434" starttime="20160810 15:54:35.434"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[2]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<msg timestamp="20160810 15:54:35.435" level="INFO">${stock} = xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"15")]</msg>
<status status="PASS" endtime="20160810 15:54:35.435" starttime="20160810 15:54:35.434"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[3]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${etf}</var>
</assign>
<msg timestamp="20160810 15:54:35.435" level="INFO">${etf} = xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"15")]</msg>
<status status="PASS" endtime="20160810 15:54:35.436" starttime="20160810 15:54:35.435"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[4]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${realestate}</var>
</assign>
<msg timestamp="20160810 15:54:35.436" level="INFO">${realestate} = xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"15")]</msg>
<status status="PASS" endtime="20160810 15:54:35.436" starttime="20160810 15:54:35.436"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[5]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${cash}</var>
</assign>
<msg timestamp="20160810 15:54:35.437" level="INFO">${cash} = xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"60")]</msg>
<status status="PASS" endtime="20160810 15:54:35.437" starttime="20160810 15:54:35.437"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.458" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"15")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.458" starttime="20160810 15:54:35.437"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${stock}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.478" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"15")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.479" starttime="20160810 15:54:35.458"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${etf}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.497" level="INFO">Current page contains element 'xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"15")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.497" starttime="20160810 15:54:35.479"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${realestate}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.516" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"15")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.516" starttime="20160810 15:54:35.497"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${cash}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.534" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"60")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.534" starttime="20160810 15:54:35.517"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.534" starttime="20160810 15:54:35.432"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.578" starttime="20160810 15:54:35.535"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.596" level="INFO">${sliderval} = 7</msg>
<status status="PASS" endtime="20160810 15:54:35.596" starttime="20160810 15:54:35.578"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.597" starttime="20160810 15:54:35.597"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${offset}+100</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20160810 15:54:35.598" level="INFO">${offset} = 300</msg>
<status status="PASS" endtime="20160810 15:54:35.599" starttime="20160810 15:54:35.597"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${offset}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.599" starttime="20160810 15:54:35.599"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.599" starttime="20160810 15:54:35.430"></status>
</kw>
<kw type="foritem" name="${index} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.600" starttime="20160810 15:54:35.599"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.601" starttime="20160810 15:54:35.600"></status>
</kw>
<kw name="Move Slider And Check">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.602" starttime="20160810 15:54:35.602"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[1]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${bond}</var>
</assign>
<msg timestamp="20160810 15:54:35.603" level="INFO">${bond} = xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"10")]</msg>
<status status="PASS" endtime="20160810 15:54:35.603" starttime="20160810 15:54:35.602"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.604" starttime="20160810 15:54:35.603"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[2]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<msg timestamp="20160810 15:54:35.605" level="INFO">${stock} = xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"20")]</msg>
<status status="PASS" endtime="20160810 15:54:35.605" starttime="20160810 15:54:35.604"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[3]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${etf}</var>
</assign>
<msg timestamp="20160810 15:54:35.606" level="INFO">${etf} = xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"20")]</msg>
<status status="PASS" endtime="20160810 15:54:35.606" starttime="20160810 15:54:35.605"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[4]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${realestate}</var>
</assign>
<msg timestamp="20160810 15:54:35.607" level="INFO">${realestate} = xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"20")]</msg>
<status status="PASS" endtime="20160810 15:54:35.607" starttime="20160810 15:54:35.606"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[5]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${cash}</var>
</assign>
<msg timestamp="20160810 15:54:35.607" level="INFO">${cash} = xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"30")]</msg>
<status status="PASS" endtime="20160810 15:54:35.607" starttime="20160810 15:54:35.607"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.627" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"10")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.628" starttime="20160810 15:54:35.607"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${stock}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.647" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"20")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.647" starttime="20160810 15:54:35.628"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${etf}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.666" level="INFO">Current page contains element 'xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"20")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.666" starttime="20160810 15:54:35.647"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${realestate}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.684" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"20")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.684" starttime="20160810 15:54:35.666"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${cash}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.703" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"30")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.703" starttime="20160810 15:54:35.684"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.703" starttime="20160810 15:54:35.601"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.743" starttime="20160810 15:54:35.704"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.758" level="INFO">${sliderval} = 8</msg>
<status status="PASS" endtime="20160810 15:54:35.758" starttime="20160810 15:54:35.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.759" starttime="20160810 15:54:35.759"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${offset}+100</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20160810 15:54:35.760" level="INFO">${offset} = 400</msg>
<status status="PASS" endtime="20160810 15:54:35.761" starttime="20160810 15:54:35.759"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${offset}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.761" starttime="20160810 15:54:35.761"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.761" starttime="20160810 15:54:35.599"></status>
</kw>
<kw type="foritem" name="${index} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.762" starttime="20160810 15:54:35.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.763" starttime="20160810 15:54:35.762"></status>
</kw>
<kw name="Move Slider And Check">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.764" starttime="20160810 15:54:35.764"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[1]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${bond}</var>
</assign>
<msg timestamp="20160810 15:54:35.765" level="INFO">${bond} = xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"5")]</msg>
<status status="PASS" endtime="20160810 15:54:35.765" starttime="20160810 15:54:35.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.765" starttime="20160810 15:54:35.765"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[2]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<msg timestamp="20160810 15:54:35.766" level="INFO">${stock} = xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"30")]</msg>
<status status="PASS" endtime="20160810 15:54:35.766" starttime="20160810 15:54:35.765"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[3]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${etf}</var>
</assign>
<msg timestamp="20160810 15:54:35.766" level="INFO">${etf} = xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"10")]</msg>
<status status="PASS" endtime="20160810 15:54:35.766" starttime="20160810 15:54:35.766"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[4]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${realestate}</var>
</assign>
<msg timestamp="20160810 15:54:35.767" level="INFO">${realestate} = xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"30")]</msg>
<status status="PASS" endtime="20160810 15:54:35.767" starttime="20160810 15:54:35.767"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[5]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${cash}</var>
</assign>
<msg timestamp="20160810 15:54:35.768" level="INFO">${cash} = xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"20")]</msg>
<status status="PASS" endtime="20160810 15:54:35.768" starttime="20160810 15:54:35.768"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.789" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"5")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.789" starttime="20160810 15:54:35.768"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${stock}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.809" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"30")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.809" starttime="20160810 15:54:35.789"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${etf}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.828" level="INFO">Current page contains element 'xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"10")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.828" starttime="20160810 15:54:35.810"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${realestate}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.846" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"30")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.847" starttime="20160810 15:54:35.829"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${cash}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.864" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"20")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.864" starttime="20160810 15:54:35.847"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.865" starttime="20160810 15:54:35.763"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.899" starttime="20160810 15:54:35.865"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:35.914" level="INFO">${sliderval} = 9</msg>
<status status="PASS" endtime="20160810 15:54:35.914" starttime="20160810 15:54:35.899"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.914" starttime="20160810 15:54:35.914"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${offset}+100</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20160810 15:54:35.916" level="INFO">${offset} = 500</msg>
<status status="PASS" endtime="20160810 15:54:35.916" starttime="20160810 15:54:35.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${offset}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.916" starttime="20160810 15:54:35.916"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:35.917" starttime="20160810 15:54:35.761"></status>
</kw>
<kw type="foritem" name="${index} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.917" starttime="20160810 15:54:35.917"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.918" starttime="20160810 15:54:35.918"></status>
</kw>
<kw name="Move Slider And Check">
<arguments>
<arg>${data[${index}]}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${values}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.919" starttime="20160810 15:54:35.919"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[1]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${bond}</var>
</assign>
<msg timestamp="20160810 15:54:35.920" level="INFO">${bond} = xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"0")]</msg>
<status status="PASS" endtime="20160810 15:54:35.920" starttime="20160810 15:54:35.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:35.920" starttime="20160810 15:54:35.920"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[2]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<msg timestamp="20160810 15:54:35.921" level="INFO">${stock} = xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"40")]</msg>
<status status="PASS" endtime="20160810 15:54:35.921" starttime="20160810 15:54:35.921"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[3]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${etf}</var>
</assign>
<msg timestamp="20160810 15:54:35.922" level="INFO">${etf} = xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"5")]</msg>
<status status="PASS" endtime="20160810 15:54:35.922" starttime="20160810 15:54:35.921"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[4]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${realestate}</var>
</assign>
<msg timestamp="20160810 15:54:35.922" level="INFO">${realestate} = xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"35")]</msg>
<status status="PASS" endtime="20160810 15:54:35.922" starttime="20160810 15:54:35.922"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"</arg>
<arg>${values[5]}</arg>
<arg>")]</arg>
</arguments>
<assign>
<var>${cash}</var>
</assign>
<msg timestamp="20160810 15:54:35.923" level="INFO">${cash} = xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"20")]</msg>
<status status="PASS" endtime="20160810 15:54:35.923" starttime="20160810 15:54:35.923"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${bond}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.943" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Bonds:')]/following-sibling::span[1][contains(text(),"0")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.943" starttime="20160810 15:54:35.923"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${stock}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.963" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Stocks:')]/following-sibling::span[1][contains(text(),"40")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.964" starttime="20160810 15:54:35.943"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${etf}</arg>
</arguments>
<msg timestamp="20160810 15:54:35.983" level="INFO">Current page contains element 'xpath=//span[contains(text(),'ETFs:')]/following-sibling::span[1][contains(text(),"5")]'.</msg>
<status status="PASS" endtime="20160810 15:54:35.983" starttime="20160810 15:54:35.964"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${realestate}</arg>
</arguments>
<msg timestamp="20160810 15:54:36.001" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Real Estate:')]/following-sibling::span[1][contains(text(),"35")]'.</msg>
<status status="PASS" endtime="20160810 15:54:36.001" starttime="20160810 15:54:35.983"></status>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<doc>Verifies element identified by `locator` is found on the current page.</doc>
<arguments>
<arg>${cash}</arg>
</arguments>
<msg timestamp="20160810 15:54:36.009" level="INFO">Current page contains element 'xpath=//span[contains(text(),'Cash:')]/following-sibling::span[1][contains(text(),"20")]'.</msg>
<status status="PASS" endtime="20160810 15:54:36.009" starttime="20160810 15:54:36.001"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:36.009" starttime="20160810 15:54:35.918"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:36.046" starttime="20160810 15:54:36.010"></status>
</kw>
<kw name="Get Element Attribute" library="Selenium2Library">
<doc>Return value of element attribute.</doc>
<arguments>
<arg>${slider_locator}@value</arg>
</arguments>
<assign>
<var>${sliderval}</var>
</assign>
<msg timestamp="20160810 15:54:36.061" level="INFO">${sliderval} = 10</msg>
<status status="PASS" endtime="20160810 15:54:36.061" starttime="20160810 15:54:36.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${sliderval}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:36.061" starttime="20160810 15:54:36.061"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${offset}+100</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20160810 15:54:36.063" level="INFO">${offset} = 600</msg>
<status status="PASS" endtime="20160810 15:54:36.063" starttime="20160810 15:54:36.062"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${offset}</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:36.063" starttime="20160810 15:54:36.063"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:36.063" starttime="20160810 15:54:35.917"></status>
</kw>
<status status="PASS" endtime="20160810 15:54:36.064" starttime="20160810 15:54:35.258"></status>
</kw>
<doc>This is for moving the rating slider and verifying %values</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" endtime="20160810 15:54:36.064" critical="yes" starttime="20160810 15:54:35.234"></status>
</test>
<test id="s1-s2-t4" name="User should be able to move slider left">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20160810 15:54:36.066" level="INFO">Opening url 'http://localhost:8080/asset-manager-react1'</msg>
<status status="PASS" endtime="20160810 15:54:36.421" starttime="20160810 15:54:36.066"></status>
</kw>
<kw name="Drag And Drop By Offset" library="Selenium2Library">
<doc>Drags element identified with `source` which is a locator.</doc>
<arguments>
<arg>${slider_locator}</arg>
<arg>-${offset}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20160810 15:54:36.480" starttime="20160810 15:54:36.421"></status>
</kw>
<kw type="for" name="${index} IN RANGE [ 4 | 1 ]">
<status status="PASS" endtime="20160810 15:54:36.481" starttime="20160810 15:54:36.481"></status>
</kw>
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20160810 15:54:36.599" starttime="20160810 15:54:36.481"></status>
</kw>
<doc>This is for moving the rating slider and verifying %values</doc>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" endtime="20160810 15:54:36.599" critical="yes" starttime="20160810 15:54:36.065"></status>
</test>
<kw type="teardown" name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" endtime="20160810 15:54:36.602" starttime="20160810 15:54:36.602"></status>
</kw>
<doc>test suite for checking the asset manager risk slider functionality</doc>
<status status="FAIL" endtime="20160810 15:54:36.602" starttime="20160810 15:54:31.679"></status>
</suite>
<status status="FAIL" endtime="20160810 15:54:36.608" starttime="20160810 15:54:25.964"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="5">Critical Tests</stat>
<stat fail="4" pass="5">All Tests</stat>
</total>
<tag>
<stat fail="2" pass="2">Negative</stat>
<stat fail="2" pass="3">Smoke</stat>
</tag>
<suite>
<stat fail="4" id="s1" name="Asset Manager Recommendations &amp; Risk Profile Slider" pass="5">Asset Manager Recommendations &amp; Risk Profile Slider</stat>
<stat fail="3" id="s1-s1" name="Asset Manager Recommendations" pass="2">Asset Manager Recommendations &amp; Risk Profile Slider.Asset Manager Recommendations</stat>
<stat fail="1" id="s1-s2" name="Risk Profile Slider" pass="3">Asset Manager Recommendations &amp; Risk Profile Slider.Risk Profile Slider</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
